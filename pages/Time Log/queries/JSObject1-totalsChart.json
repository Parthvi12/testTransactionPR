{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "totalsChart",
    "fullyQualifiedName": "JSObject1.totalsChart",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Time Log",
    "collectionId": "Time Log_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let totals = {};\n  getAllTimeLogs.data.map(log => {\n    let duration = moment(log?.time_end || moment()).diff(log.time_start, 'hours');\n    totals[log.task] = duration + (totals[log?.task] || 0);\n  });\n  return Object.keys(totals).map(key => ({\n    x: key,\n    y: totals[key]\n  }));\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  let totals = {};\n  getAllTimeLogs.data.map(log => {\n    let duration = moment(log?.time_end || moment()).diff(log.time_start, 'hours');\n    totals[log.task] = duration + (totals[log?.task] || 0);\n  });\n  return Object.keys(totals).map(key => ({\n    x: key,\n    y: totals[key]\n  }));\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Time Log_JSObject1.totalsChart",
  "deleted": false,
  "gitSyncId": "63e343370c7ee4270b3bc8a5_2023-02-08T09:53:09.027638366Z"
}