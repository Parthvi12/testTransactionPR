{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "joinData",
    "fullyQualifiedName": "JSObject1.joinData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Time Log",
    "collectionId": "Time Log_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(data1 = getTimeLogs.data, data1fk = 'user_id', data2 = getUsers.data, data2pk = 'id') => {\n  let joinedData = data1, data2Label = data1fk + '_Obj';\n  joinedData.forEach(d1 => {\n    d1[data2Label] = data2?.find(d2 => d2[data2pk] == d1[data1fk]);\n  });\n  return joinedData;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(data1 = getTimeLogs.data, data1fk = 'user_id', data2 = getUsers.data, data2pk = 'id') => {\n  let joinedData = data1, data2Label = data1fk + '_Obj';\n  joinedData.forEach(d1 => {\n    d1[data2Label] = data2?.find(d2 => d2[data2pk] == d1[data1fk]);\n  });\n  return joinedData;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Time Log_JSObject1.joinData",
  "deleted": false,
  "gitSyncId": "63e343370c7ee4270b3bc8a5_2023-02-08T09:53:08.954389975Z"
}